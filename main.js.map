{"version":3,"sources":["./src/app/shared/header/header.component.ts","./src/app/shared/header/header.component.html","./src/app/jobs/services/jobs.service.ts","./src/environments/environment.ts","./src/app/shared/shared.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>\n  <span>Github</span> Jobs\n</h1>\n","import { IJob } from './../interfaces/IJob.interface';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobsService {\n\n  private _baseUrl='https://jobs.github.com/positions';\n  datos$=new Subject<IJob[]>();\n  datos:IJob[]=[];\n  loading$=new Subject<boolean>();\n  loading=false;\n\n  jobSeleccionado:IJob | undefined;\n\n    valores={\n      description:'',\n      location:'London',\n      fullTime:false,\n    }\n\n    constructor(private http:HttpClient) { }\n\n  getLoading():Observable<boolean>{\n    return this.loading$.asObservable();\n  }\n\n  setLoading(loading:boolean){\n    this.loading=loading;\n    this.loading$.next(this.loading);\n  }\n\n  getDatos():Observable<IJob[]>{\n    return this.datos$.asObservable();\n  }\n\n  getPuestos():Observable<IJob[]>{\n    const {description,fullTime,location}=this.valores;\n    return this.http.get<IJob[]>(`${this._baseUrl}.json?description=${description}&full_time=${fullTime}&location=${location}`);\n  }\n\n  cargarDatos(){\n    this.setLoading(true);\n    this.getPuestos()\n      .subscribe(datos=>{\n        this.datos=datos\n        this.datos$.next(datos)\n        this.setLoading(false);\n      })\n  }\n\n  getJob(id:string):Observable<IJob>{\n    return this.http.get<IJob>(`${this._baseUrl}/${id}.json?markdown=true`);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\n\n\n\n@NgModule({\n  declarations: [HeaderComponent],\n  imports: [\n    CommonModule\n  ],\n  exports:[\n    HeaderComponent\n  ]\n})\nexport class SharedModule { }\n","<div\n  class=\"bloquear\"\n  *ngIf=\"loading\"\n>\n  <img src=\"../assets/loading.gif\" alt=\"Loading...\">\n</div>\n\n<app-header></app-header>\n\n<router-outlet></router-outlet>\n","import { JobsService } from './jobs/services/jobs.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'Github-Jobs';\n\n  loading:boolean=false;\n\n  constructor(private jobsService:JobsService){}\n\n  ngOnInit(){\n    this.jobsService.getLoading()\n      .subscribe(loading=>this.loading=loading);\n  }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from './shared/shared.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    SharedModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes:Routes=[\n  {\n    path:'',\n    loadChildren:()=>import('./jobs/jobs.module').then(m=>m.JobsModule)\n  },{\n    path:'**',\n    redirectTo:''\n  }\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports:[\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}